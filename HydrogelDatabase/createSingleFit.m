function [fitresult, gof] = createSingleFit(time, outletTrace)
%CREATEFIT(TIME,GREENOUTLET)
%  Create a fit.
%
%  Data for 'two-component exponential' fit:
%      X Input : time
%      Y Output: greenOutlet
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 09-May-2016 17:35:18


%% Fit: 'two-component exponential'.
[xData, yData] = prepareCurveData( time, outletTrace );

% Set up fittype and options.
ft = fittype( '1 - c*exp(-t/tau)', 'independent', 't', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 0];
%opts.Upper = [0.5 Inf];
opts.StartPoint = [1 1000];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure
subplot( 2, 1, 1 );
h = plot( fitresult, xData, yData );
legend( h, 'outlet vs. time', 'one-component exponential', 'Location', 'SouthEast' );
% Label axes
xlabel('Time (min)')
ylabel('Normalized outlet')
grid on

% Plot residuals.
subplot( 2, 1, 2 );
h = plot( fitresult, xData, yData, 'residuals' );
legend( h, 'residuals', 'Zero Line', 'Location', 'NorthEast' );
% Label axes
xlabel('Time (min)')
ylabel('Residuals')
grid on


% % Plot fit with data.
% figure( 'Name', 'two-component exponential' );
% h = plot( fitresult, xData, yData );
% legend( h, 'greenOutlet vs. time', 'two-component exponential', 'Location', 'NorthEast' );
% % Label axes
% xlabel time
% ylabel greenOutlet
% grid on




